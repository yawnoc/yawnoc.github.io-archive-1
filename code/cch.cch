<*>
  Python: a regex converter from CCH to HTML | 20190720 | 20200328 | dmr
  | A regex converter from Conway's concise HTML (CCH) to standard (HTML), \
    written in Python.
</*>

<=h>
  <@ih></@ih>
  <@it></@it>
  <@ic></@ic>
</=h>

<% [sun-tzu] | <^e>Sun~Tzuu</^e> %>

<h1>Python: a regex converter from CCH to HTML</h1>

<*p> |
  <b>Code:</b>
  <@> <`>cch.py</`> | \/cch.py | GitHub: cch.py </@>
</*p>

<=>
  
  <@i> <b>Supreme:</b> | #supreme | [supreme.h] </@i>
  
  <@i> <code>\<``\></code> | #display-code | [display-code.h] </@i>
  <@i> <code>\<`\></code> | #inline-code | [inline-code.h] </@i>
  <@i> <`><!-- --></`> | #html-comment | [html-comment.h] </@i>
  <@i> <`><script></`> | #html-script | [html-script.h] </@i>
  <@i>
    <`><? ?></`>
    | #user-defined-regex-replacement
    | [user-defined-regex-replacement.h]
  </@i>
  <@i>
    <`><% %></`> | #user-defined-replacement | [user-defined-replacement.h]
  </@i>
  <@i> <`><$$></`> | #display-maths | [display-maths.h] </@i>
  <@i> <`><$></`> | #inline-maths | [inline-maths.h] </@i>
  <@i>
    <`><$d></`> | #inline-maths-definition | [inline-maths-definition.h]
  </@i>
  
  <@i> <b>0-arg:</b> | #zero-argument | [zero-argument.h] </@i>
  
  <@i>
    <`><@ih></`>
    | #item-anchor-abbreviation
    | [item-anchor-abbreviation.h]
  </@i>
  <@i>
    <`><^^></`>
    | #assisting-romanisation-radio
    | [assisting-romanisation-radio.h]
  </@i>
  <@i>
    <`><-t></`>
    | #svg-style-abbreviation
    | [svg-style-abbreviation.h]
  </@i>
  
  <@i>
    <b>Multi-arg:</b>
    | #multiple-argument
    | [multiple-argument.h]
  </@i>
  
  <@i> <`><+h></`> | #dialogue-image | [dialogue-image.h] </@i>
  <@i> <`><+></`> | #image | [image.h] </@i>
  <@i>
    <`><^></`>
    | #assisting-romanisation
    | [assisting-romanisation.h]
  </@i>
  <@i>
    <`><^cm></`>
    | #cantonese-mandarin-romanisation
    | [cantonese-mandarin-romanisation.h]
  </@i>
  <@i>
    <`><@u></`>
    | #directed-triangle-anchor
    |  [directed-triangle-anchor.h]
  </@i>
  <@i> <`><@i></`> | #item-anchor | [item-anchor.h] </@i>
  <@i>
    <`><@2></`>
    | #heading-self-link-anchor
    | [heading-self-link-anchor.h]
  </@i>
  <@i> <`><@></`> | #anchor | [anchor.h] </@i>
  <@i> <`><#t></`> | #boxed-translation | [boxed-translation.h] </@i>
  <@i>
    <`><;sh></`>
    | #sun-tzu-heading
    | [sun-tzu-heading.h]
  </@i>
  <@i>
    <`><;s@@></`>
    | #sun-tzu-link-division
    | [sun-tzu-link-division.h]
  </@i>
  <@i> <`><*></`> | #preamble | [preamble.h] </@i>
  <@i> <`><*p></`> | #page-properties | [page-properties.h] </@i>
  <@i> <`><*c></`> | #cite-this-page | [cite-this-page.h] </@i>
  <@i> <`><*f></`> | #footer | [footer.h] </@i>
  
  <@i> <b>1-arg:</b> | #single-argument | [single-argument.h] </@i>
  
  <@i> <`><_></`> | #assisting-numeral | [assisting-numeral.h] </@i>
  <@i> <`><:r></`> | #formatted-span | [formatted-span.h] </@i>
  <@i> <`><#></`> | #boxed-division | [boxed-division.h] </@i>
  <@i> <`><~~></`> | #dialogue-division | [dialogue-division.h] </@i>
  <@i> <`><~h></`> | #dialogue-paragraph | [dialogue-paragraph.h] </@i>
  <@i> <`><@@></`> | #link-division | [link-division.h] </@i>
  <@i>
    <`><=h></`>
    | #header-navigation-bar
    | [header-navigation-bar.h]
  </@i>
  <@i> <`><=></`> | #navigation-bar | [navigation-bar.h] </@i>
  <@i> <`><.></`> | #note-paragraph | [note-paragraph.h] </@i>
  <@i> <`><!></`> | #overflowing-division | [overflowing-division.h] </@i>
  <@i> <`><--></`> | #svg-style-container | [svg-style-container.h] </@i>
  <@i> <`><^e></`> | #text-romanisation | [text-romanisation.h] </@i>
  <@i> <`><_e></`> | #text-numeral | [text-numeral.h] </@i>
  
  <@i> <b>Escapes</b> | #escapes | [escapes.h] </@i>
  
  <@i> <b><`>{}</`></b> | #conway-italics | [conway-italics.h] </@i>
  
  <@i> <b>Whitespace</b> | #whitespace | [whitespace.h] </@i>
  
  <@i>
    <b><`>lang</`>~spans</b>
    | #automatic-chinese-span
    | [automatic-chinese-span.h]
  </@i>
  
</=>

<p>
  For the sole purpose of building this site, I wrote a Python program
  <@> <`>cch.py</`> | \/cch.py | GitHub: cch.py </@>
  which converts Conway's concise HTML (CCH) to standard HTML
  using regular expression replacements.
</p>
<p>
  CCH consists mostly of HTML-like tags,
  but with names starting with a punctuation character.
  By design, CCH is more readable and requires fewer keystrokes
  than normal HTML (and Notepad++ is able to auto-complete tags for both),
  mostly by using pipe-delimited arguments rather than HTML attributes.
  For instance compare the CCH code
</p>
<``>
  <+> image.png | Alt text | Title text | 300 | class-name </+>
</``>
<p>
  to the equivalent HTML code
</p>
<pre>
  \<img \
    class="class-name" \
    src="image.png" \
    alt="Alt text" \
    title="Title text" \
    width="300"\
  \>
</pre>

<p>
  Also CCH has many convenient backslash-escaped abbreviations;
  e.g.~<`>\<</`> gets converted to the HTML~<`>&lt;</`>
  and renders as~\<.
  CCH can be used in conjunction with normal HTML elements
  (except the <`><head></`> element and a few others
  which are generated automatically).
</p>

<p>
  This page
  <@>
    <`>cch.html</`>
    | \/code/cch.html
    | GitHub: cch.html
  </@>
  was generated from
  <@>
    <`>cch.cch</`>
    | \/code/cch.cch
    | GitHub: cch.cch
  </@>
  by running <`>cch.py code/cch</`>,
  and it serves as both the documentation and an example.
</p>

<p>
  Finally, I am indebted unto <b>J.H.</b>, \
  without whom this converter would not exist,
  due to lack of motivation to start writing it (and learn Python).
</p>

<p>
  CCH in canonical order, which is roughly the order in which
  the regex replacements are performed, is as thus:
</p>


<% [supreme.h] | Supreme elements %>
<@2> [supreme.h] | supreme </@2>


<p>
  Each of these elements is immune to any other elements or processing
  lower than it in this page.
  For example, the normal
  <@>
    HTML comment element <`><!-- --></`>
    | #html-comment
    | [html-comment.h]
  </@>
  yields to the
  <@>
    display code element <code>\<``\> \{content\} \</``\></code>
    | #display-code
    | [display-code.h]
  </@>
  and the
  <@>
    inline code element <code>\<`\> \{content\} \</`\></code>
    | #inline-code
    | [inline-code.h]
  </@>,
  but prevails over all else.
</p>

<% [display-code.h] | Display code element %>
<@3> [display-code.h] | display-code </@3>

<#>
  <code>\<``\> \{content\} \</``\></code>
</#>

<p>
  Converted to a <`><pre></`> element,
  with automatic escaping of <`>&</`>, <`><</`> and <`>></`>,
  and automatic de-indentation, for <`>{content}</`>.
</p>

<ul>
  
  <li>
    <b>CCH</b>
    <pre>
      \<``\>
        if x == 1 &amp;&amp; y &lt; 0
      \</``\>
    </pre>
  </li>
  
  <li>
    <b>HTML</b>
    <``>
      <pre>
      if x == 1 &amp;&amp; y &lt; 0
      </pre>
    </``>
  </li>
  
  <li>
    <b>Rendered</b>
      <``>
        if x == 1 && y < 0
      </``>
  </li>
  
</ul>

<% [inline-code.h] | Inline code element %>
<@3> [inline-code.h] | inline-code </@3>

<#>
  <code>\<`\> \{content\} \</`\></code>
</#>

<p>
  Converted to a <`><code></`> element,
  with automatic escaping of <`>&</`>, <`><</`> and <`>></`>,
  and backslash-line-continuation,
  for <`>{content}</`>.
</p>

<ul>
  
  <li>
    <b>CCH</b>
    <``>
      <`> if x == 1 && y < 0 </`>
    </``>
  </li>
  
  <li>
    <b>HTML</b>
    <``>
      <code>if x == 1 &amp;&amp; y &lt; 0</code>
    </``>
  </li>
  
  <li>
    <b>Rendered</b> <br>
      <`> if x == 1 && y < 0 </`>
  </li>
  
</ul>

<% [html-comment.h] | HTML comment element %>
<@3> [html-comment.h] | html-comment </@3>

<#>
  <`> {horizontal whitespace} <!-- {content} --> </`>
</#>

<p>
  Removed. (You can comment as much as you like in the CCH source file
  without increasing the size of the output HTML file.) <!-- Like so. -->
</p>

<% [html-script.h] | HTML script element %>
<@3> HTML script element | html-script </@3>

<#>
  <`> <script> {content} </script> </`>
</#>

<p>
  <@> Whitespace is removed | #whitespace | [whitespace.h] </@>,
  but <`>{content}</`> is otherwise unchanged.
</p>

<%
  [user-defined-regex-replacement.h]
  | User-defined regex replacement element
%>
<@3> [user-defined-regex-replacement.h] | user-defined-regex-replacement </@3>

<#>
  <`><? {pattern} | {replacement} ?></`>
</#>

<p>
  The most powerful element of all.
</p>
<p>
  <`>{pattern}</`> cannot contain a pipe surrounded by whitespace,
  while the separating pipe must be surrounded by whitespace.
</p>

<p>
  I recommend leaving the private-use character <`>U+E000</`> untouched,
  since it is used internally for replacements.
  It is certainly possible to break the converter
  by supplying replacements which interfere with other CCH replacements;
  do so at your own peril.
</p>

<p>
  First the converter reads and removes all the replacement definitions;
  then it applies the replacements in <em>reverse</em> order.
  Therefore nesting will work as long as
  the referenced definition appears higher up in the markup.
  Only one definition per <`>{pattern}</`> is permitted;
  any subsequent definitions for the same <`>{pattern}</`>
  will result in an error message.
</p>

<ul>
  
  <li>
    <b>CCH</b>
    <``>
      <? __([\s\S]*?)__ | __\1__\1__ ?>
      
      __main__ <br>
      __(anything, really)__ <br>
      
      (dupes) are bad.
      
      <? \(dupes\) | Duplicate definitions ?>
      <? \(dupes\) | This re-definition will cause an error ?>
    </``>
  </li>
  
  <li>
    <b>Rendered</b> <br>
      <? __([\s\S]*?)__ | __\1__\1__ ?>
      
      __main__ <br>
      __(anything, really)__ <br>
      
      (dupes) are bad.
      
      <? \(dupes\) | Duplicate definitions ?>
      <? \(dupes\) | This re-definition will cause an error ?>
  </li>
  
</ul>


<% [user-defined-replacement.h] | User-defined replacement element %>
<@3> [user-defined-replacement.h] | user-defined-replacement </@3>

<#>
  <`><% {old string} | {new string} %></`>
</#>

<ul>
  <li>
    <`>{old string}</`> is the string to be replaced, and
  </li>
  <li>
    <`>{new string}</`> is the replacement string.
  </li>
</ul>

<p>
  <`>{old string}</`> cannot contain \\ or \|,
  and must begin with two non-whitespace characters
  (to make it escapable using the literal empty string escape <`>\!</`>).
</p>

<p>
  Works as per the
  <@>
    regex replacement element <`><? ?></`>
    | #user-defined-regex-replacement
    | [user-defined-regex-replacement.h]
  </@>,
  only without the regex.
</p>

<p>
  To write an <`>{old string}</`> literally,
  use a literal empty string escape <`>\!</`>
  between any two of its non-whitespace characters.
</p>

<ul>
  
  <li>
    <b>CCH</b>
    <``>
      <% [cch] | Conway's concise HTML %>
      <% [cch-good] | [cch] is good %>
      
      [cch-good]. <br>
      A literal [\!cch] rendered from [cch]. <br>
      Definitions may be given after calls: [y]. <br>
      
      <% [y] | yes %>
      
      [dupes] are bad.
      
      <% [dupes] | Duplicate definitions %>
      <% [dupes] | This re-definition will cause an error %>
    </``>
  </li>
  
  <li>
    <b>Rendered</b> <br>
      <% [cch] | Conway's concise HTML %>
      <% [cch-good] | [cch] is good %>
      
      [cch-good]. <br>
      A literal [\!cch] rendered from [cch]. <br>
      Definitions may be given after calls: [y]. <br>
      
      <% [y] | yes %>
      
      [dupes] are bad.
      
      <% [dupes] | Duplicate definitions %>
      <% [dupes] | This re-definition will cause an error %>
  </li>
  
</ul>

<% [display-maths.h] | Display maths element %>
<@3> [display-maths.h] | display-maths </@3>

<#>
  <`><$$> {content} </$$></`>
</#>

<p>
  Converted to a <`><div class="maths"></`> element for a
  <@>
    KaTeX
    | /code/katex-guide.html
    | How to render mathematical equations using KaTeX
  </@>
  display equation, with automatic escaping of <`>&</`>, <`><</`> and <`>></`>,
  and automatic de-indentation, for <`>{content}</`>.
</p>

<ul>
  
  <li>
    <b>CCH</b>
    <``>
      <$$>
        \begin{aligned}
          1 + 1 &= 2 \\
          1 + 1 &< 3
        \end{aligned}
      </$$>
    </``>
  </li>
  
  <li>
    <b>HTML</b>
    <``>
      <div class="maths">
      \begin{aligned}
        1 + 1 &amp;= 2 \\
        1 + 1 &amp;&lt; 3
      \end{aligned}
      </div>
    </``>
  </li>
  
  <li>
    <b>Rendered</b>
      <$$>
        \begin{aligned}
          1 + 1 &= 2 \\
          1 + 1 &< 3
        \end{aligned}
      </$$>
  </li>
  
</ul>

<% [inline-maths.h] | Inline maths element %>
<@3> [inline-maths.h] | inline-maths </@3>

<#>
  <`><$> {content} </$></`>
</#>

<p>
  Converted to a <`><span class="maths"></`> element for a
  <@>
    KaTeX
    | /code/katex-guide.html
    | How to render mathematical equations using KaTeX
  </@>
  inline equation, with automatic escaping of <`>&</`>, <`><</`> and <`>></`>
  for <`>{content}</`>.
</p>

<ul>
  
  <li>
    <b>CCH</b>
    <``>
      <$> 1 + 1 < 3 </$>
    </``>
  </li>
  
  <li>
    <b>HTML</b>
    <``>
      <span class="maths"> 1 + 1 &lt; 3 </span>
    </``>
  </li>
  
  <li>
    <b>Rendered</b> <br>
      <$> 1 + 1 < 3 </$>
  </li>
  
</ul>

<% [inline-maths-definition.h] | Inline maths definition element %>
<@3> [inline-maths-definition.h] | inline-maths-definition </@3>

<#>
  <`><$d> {content} </$d></`>
</#>

<p>
  Converted to a <`><span class="maths embedded-definitions"></`> element,
  with automatic escaping of <`>&</`>, <`><</`> and <`>></`>
  for <`>{content}</`>.
  This does not display, and should be used to hold
  <@>
    KaTeX
    | /code/katex-guide.html
    | How to render mathematical equations using KaTeX
  </@>
  <`>\gdef</`> definitions.
</p>

<ul>
  
  <li>
    <b>CCH</b>
    <``>
      <$d> \gdef\f#1#2{\cos(#1 \pi x) \cos(#2 \pi y)} </$d>
      <$$> \f{m}{n} + \f{n}{m} </$$>
    </``>
  </li>
  
  <li>
    <b>Rendered</b>
      <$d> \gdef\f#1#2{\cos(#1 \pi x) \cos(#2 \pi y)} </$d>
      <$$> \f{m}{n} + \f{n}{m} </$$>
  </li>
  
</ul>


<% [zero-argument.h] | Zero-argument elements %>
<@2> [zero-argument.h] | zero-argument </@2>



<% [item-anchor-abbreviation.h] | Item anchor abbreviation element %>
<@3> [item-anchor-abbreviation.h] | item-anchor-abbreviation </@3>

<#>
  <`><@i{type}></@i{type}></`>
</#>

<p>
  Pre-defined abbreviations for
  <@> item anchors | #item-anchor | [item-anchor.h] </@>.
</p>

<!c><table>
  <tr>
    <th><`>{type}</`></th>
    <th><`>{content}</`></th>
    <th><`>{href}</`></th>
    <th><`>{title}</`></th>
  </tr>
  <tr>
    <td><`>h</`></td>
    <td>Home</td>
    <td>/</td>
    <td>Home page</td>
  </tr>
  <tr>
    <td><`>t</`></td>
    <td>Top</td>
    <td>#</td>
    <td>Jump back to top</td>
  </tr>
  <tr>
    <td><`>i</`></td>
    <td>Intro</td>
    <td>#introduction</td>
    <td>Introduction</td>
  </tr>
  <tr>
    <td><`>n</`></td>
    <td>Translation</td>
    <td>#translation</td>
    <td>Translation</td>
  </tr>
  <tr>
    <td><`>r</`></td>
    <td>Result</td>
    <td>#result</td>
    <td>Skip to the result</td>
  </tr>
  <tr>
    <td><`>c</`></td>
    <td>Cite</td>
    <td>#cite</td>
    <td>Cite this page</td>
  </tr>
</table></!c>

<p>
  For example, the navigation bar at the top of this page is generated using
</p>
<``>
  <=h>
    <@ih></@ih>
    <@it></@it>
    <@ic></@ic>
  </=h>
</``>

<% [assisting-romanisation-radio.h] | Assisting romanisation radio element %>
<@3> [assisting-romanisation-radio.h] | assisting-romanisation-radio </@3>

<#>
  <`><^^></^^></`>
</#>

<p>
  Only the first occurrence is replaced.
</p>
<p>
  Converted to the radio controller for
  <@>
    assisting romanisations
    | #assisting-romanisation
    | [assisting-romanisation.h]
  </@>.
</p>

<ul>
  
  <li>
    <b>Rendered</b>
    <^^></^^>
  </li>
  
</ul>

<% [svg-style-abbreviation.h] | SVG style abbreviation element %>
<@3> [svg-style-abbreviation.h] | svg-style-abbreviation </@3>

<#>
  <`><-{type}></-{type}></`>
</#>

<p>
  Pre-defined abbreviations for SVG styles,
  for
    strokes (<`>{type}</`>~<`>s</`>),
    text (<`>{type}</`>~<`>t</`>),
    maths (<`>{type}</`>~<`>m</`>),
    line colour (<`>{type}</`>~<`>lc</`>) and
    text colour (<`>{type}</`>~<`>tc</`>).
  Must be used inside an
  <@>
    SVG style container element
    | #svg-style-container
    | [svg-style-container.h]
  </@>.
</p>



<% [multiple-argument.h] | Multiple-argument elements %>
<@2> [multiple-argument.h] | multiple-argument </@2>


<p>
  Arguments are to be delimited by the pipe character <`>|</`>.
  For a literal pipe, \
  use the <@> backslash escape | #escapes | [escapes.h] </@>
  <`>\|</`>.
</p>
<p>
  Elements may be nested provided the inner element occurs
  strictly higher in this list
  (except the <@> preamble | #preamble | [preamble.h] </@>,
  which must be supplied at the very beginning of the CCH source file).
</p>


<% [dialogue-image.h] | Dialogue image element %>
<@3> [dialogue-image.h] | dialogue-image </@3>

<#>
  <`><+{pos}> {src} | {alt} </+{pos}></`>
</#>

<p>
  Converted to an <`><img></`> element
  for the host (<`>{pos}</`>~<`>h</`>) or the guest (<`>{pos}</`>~<`>g</`>),
  and to be used inside a
  <@>
    dialogue division element
    | #dialogue-division
    | [dialogue-division.h]
  </@>.
</p>

<% [image.h] | Image element %>
<@3> [image.h] | image </@3>

<#>
  <`><+> {src} | {alt} [| title [| width [| class]]] </+></`>
</#>

<p>
  Converted to an <`><img></`> element.
  Passing the empty string (or only whitespace) to
  any of <`>[title]</`>, <`>[width]</`> or <`>[class]</`>
  is equivalent to omitting them.
</p>

<p>
  <`>&</`>, <`><</`>, <`>></`> and <`>"</`> are automatically escaped as
  <`>&amp;</`>, <`>&lt;</`>, <`>&gt;</`> and <`>&quot;</`> in all arguments.
</p>

<ul>
  
  <li>
    <b>CCH</b>
    <``>
      <+>
        /favicon-32x32.png
        | Site favicon: two crescents
        | &, <, >, and " are automatically escaped.
          Alternatively you may use backslash escapes (\&, \<, \>)
          for the first three of these.
      </+>
    </``>
  </li>
  
  <li>
    <b>HTML</b>
    <pre>
      \<img src="/favicon-32x32.png" \
        alt="Site favicon: two crescents" \
        title="\&amp;, \&lt;, \&gt;, and \&quot; are automatically escaped.
      Alternatively you may use backslash escapes (\&amp;, \&lt;, \&gt;)
      for the first three of these."\>
    </pre>
  </li>
  
  <li>
    <b>Rendered</b> <br>
      <+>
        /favicon-32x32.png
        | Site favicon: two crescents
        | &, <, >, and " are automatically escaped.
          Alternatively you may use backslash escapes (\&, \<, \>)
          for the first three of these.
      </+>
  </li>
  
</ul>

<% [assisting-romanisation.h] | Assisting romanisation element %>
<@3> [assisting-romanisation.h] | assisting-romanisation </@3>

<#>
  <`>{horizontal whitespace} <^> {conway} | {wadegiles} | {pinyin} </^></`>
</#>

<p>
  Converted to <`><span></`> elements controlled by the
  <@>
    assisting romanisation radio
    | #assisting-romanisation-radio
    | [assisting-romanisation-radio.h]
  </@>,
  where all arguments are unescaped after the manner of the
  <@>
    text romanisation element
    | #text-romanisation
    | [text-romanisation.h]
  </@>.
  The preceding horizontal whitespace is stripped.
</p>

<ul>
  
  <li>
    <b>CCH</b>
    <``>
      絲 <^> see1 | ssuu1 | si= </^>
    </``>
  </li>
  
  <li>
    <b>Rendered</b> <br>
      絲 <^> see1 | ssuu1 | si= </^>
  </li>
  
</ul>

<%
  [cantonese-mandarin-romanisation.h] |
  Cantonese \& Mandarin romanisation element
%>
<@3>
  [cantonese-mandarin-romanisation.h] |
  cantonese-mandarin-romanisation
</@3>

<#>
  <`><^cm[gov]> {cantonese} | {mandarin} [| government] </^cm[gov]></`>
</#>

<p>
  If <`>[gov]</`> is supplied (<`>g</`>) then <`>[government]</`> is required.
</p>

<ul>
  
  <li>
    <b>CCH</b>
    <``>
      惡，平聲， <^cm> woo1 | wu= </^cm> <br>
      勝，平聲， <^cmg> shing1 | she=ng | she\ng </^cmg>
    </``>
  </li>
  
  <li>
    <b>Rendered</b> <br>
      惡，平聲， <^cm> woo1 | wu= </^cm> <br>
      勝，平聲， <^cmg> shing1 | she=ng | she\ng </^cmg>
  </li>
  
</ul>

<% [directed-triangle-anchor.h] | Directed triangle anchor element %>
<@3> [directed-triangle-anchor.h] | directed-triangle-anchor </@3>

<#>
  <`><@{dir}> {content} | {id} [| title] </@{dir}></`>
</#>

<p>
  Converted to the equivalent
  <@> anchor element | #anchor | [anchor.h] </@>
  with an upward or downward triangle if <`>{dir}</`> is <`>u</`> or <`>d</`>.
  Usually used in
  <@> link divisions | #link-division | [link-division.h] </@>.
</p>

<ul>
  
  <li>
    <b>CCH</b>
    <``>
      <@d> Link division element | link-division </@d>
    </``>
  </li>
  
  <li>
    <b>Rendered</b> <br>
      <@d> Link division element | link-division </@d>
  </li>
  
</ul>

<% [item-anchor.h] | Item anchor element %>
<@3> [item-anchor.h] | item-anchor </@3>

<#>
  <`><@i> {content} | {href} [| title] </@i></`>
</#>

<p>
  Converted to the equivalent
  <@> anchor element | #anchor | [anchor.h] </@>
  wrapped inside a list item <`><li></`> element, usually to be used inside
  <@>
    navigation bar elements
    | #header-navigation-bar
    | [header-navigation-bar.h]
  </@>.
</p>

<% [heading-self-link-anchor.h] | Heading self-link anchor element %>
<@3> [heading-self-link-anchor.h] | heading-self-link-anchor </@3>

<#>
  <`><@{level}> {content} | {id} </@{level}></`>
</#>

<p>
  Converted to a heading of <`>{level}</`> <`>2</`>, <`>3</`> or <`>4</`>,
  with a self-link to its left.
</p>

<ul>
  
  <li>
    <b>CCH</b>
    <``>
      <@4> A level~4 heading | level-4 </@4>
    </``>
  </li>
  
  <li>
    <b>Rendered</b>
      <@4> A level~4 heading | level-4 </@4>
  </li>
  
</ul>

<% [anchor.h] | Anchor element %>
<@3> [anchor.h] | anchor </@3>

<#>
  <`><@> {content} | {href} [| title] </@></`>
</#>

<p>
  Converted to an <`><a></`> element.
  If the empty string (or only whitespace) is passed to <`>[title]</`>,
  the title defaults to <`>{content}</`> with all the necessary escaping.
</p>

<ul>
  
  <li>
    <b>CCH</b>
    <``>
      <@>
        This link, with "quotes", {italics} and \{literal curly brackets\},
        has no title.
        | https://en.wikipedia.org/wiki/Main_Page
      </@> <br>
      <@>
        This link, with "quotes", {italics} and \{literal curly brackets\},
        has the same title as its content (with proper escaping).
        | https://en.wikipedia.org/wiki/Main_Page
        |
      </@> <br>
      <@>
        This link, with "quotes", {italics} and \{literal curly brackets\},
        has a custom title.
        | https://en.wikipedia.org/wiki/Main_Page
        | Wikipedia, the free encyclopedia
      </@>
    </``>
  </li>
  
  <li>
    <b>Rendered</b> <br>
      <@>
        This link, with "quotes", {italics} and \{literal curly brackets\},
        has no title.
        | https://en.wikipedia.org/wiki/Main_Page
      </@> <br>
      <@>
        This link, with "quotes", {italics} and \{literal curly brackets\},
        has the same title as its content (with proper escaping).
        | https://en.wikipedia.org/wiki/Main_Page
        |
      </@> <br>
      <@>
        This link, with "quotes", {italics} and \{literal curly brackets\},
        has a custom title.
        | https://en.wikipedia.org/wiki/Main_Page
        | Wikipedia, the free encyclopedia
      </@>
  </li>
  
</ul>

<% [boxed-translation.h] | Boxed translation element %>
<@3> [boxed-translation.h] | boxed-translation </@3>

<#>
  <`><#t[size]> {chinese} | {english} </#t[size]></`>
</#>

<p>
  Converted to a <`><div class="boxed translation"></`> element,
  with the additional class <`>not-large</`>
  if <`>[size]</`> is supplied as <`>n</`>.
</p>

<ul>
  
  <li>
    <b>CCH</b>
    <``>
      <#t>
        是謂序。 | This be {the} preface.
      </#t>
    </``>
  </li>
  
  <li>
    <b>Rendered</b>
      <#t>
        是謂序。 | This be {the} preface.
      </#t>
  </li>
  
</ul>

<% [sun-tzu-heading.h] | [sun-tzu] heading element %>
<@3> [sun-tzu-heading.h] | sun-tzu-heading </@3>

<#>
  <`><;sh> {volume} | {paragraph} | {content} </;sh></`>
</#>

<ul>
  
  <li>
    <b>CCH</b>
    <``>
      <;sh> 1 | 5 | <$>\pi \approx 3</$>, <$>\sqrt{2} \approx 7/5</$> </;sh>
    </``>
  </li>
  
  <li>
    <b>Rendered</b>
      <;sh> 1 | 5 | <$>\pi \approx 3</$>, <$>\sqrt{2} \approx 7/5</$> </;sh>
  </li>
  
</ul>

<% [sun-tzu-link-division.h] | [sun-tzu] link division element %>
<@3> [sun-tzu-link-division.h] | sun-tzu-link-division </@3>

<#>
  <`>
    <;s@@> \
      {volume} | {paragraph} | {a p} | {b p} | {c p} | {c q} | {d p} \
    </;s@@>
  </`>
</#>

<ul>
  
  <li>
    <b>CCH</b>
    <``>
      <;s@@> 1 | 5 | 6 | 147 | 52061 | 4 | 13 </;s@@>
    </``>
  </li>
  
  <li>
    <b>Rendered</b>
      <;s@@> 1 | 5 | 6 | 147 | 52061 | 4 | 13 </;s@@>
  </li>
  
</ul>

<% [preamble.h] | Preamble element %>
<@3> [preamble.h] | preamble </@3>

<#>
  <`>
    <*> \
      {title} | {first created} | {last modified} \
      [| rendering [| description [| css [| js]]]] \
    </*>
  </`>
</#>

<p>
  Must be supplied at the very beginning of the CCH source file.
  Only the first occurrence is replaced.
</p>
<p>
  Automatically generates the <`><!DOCTYPE html></`> declaration
  and the <`><head></`> and <`><body></`> elements.
</p>

<ul>
  
  <li>
    <`>{title}</`> is the text which appears in the <`><title></`> element,
  </li>
  
  <li>
    <`>{first created}</`> and <`>{last modified}</`>
    are stored for use later in the
    <@> page properties | #page-properties | [page-properties.h] </@>
    and <@> footer (copyright) | #footer | [footer.h] </@> elements,
  </li>
  
  <li>
    <`>[rendering]</`> loads the relevant CSS and Javascript required
    for displaying today's date in the
    <@> Cite this page | #cite-this-page | [cite-this-page.h] </@>,
    for KaTeX <@> maths equations | #display-maths | [display-maths.h] </@>
    and for
    <@>
      assisting romanisations
      | #assisting-romanisation
      | [assisting-romanisation.h]
    </@>,
    if the supplied string contains
    <`>d</`>, <`>m</`> and <`>r</`> respectively,
  </li>
  
  <li>
    <`>[description]</`> is the text which appears
    in the description meta element, and
  </li>
  
  <li>
    <`>[css]</`> specifies embedded CSS, and
  </li>
  
  
  <li>
    <`>[js]</`> specifies <`>body onload</`> JavaScript.
  </li>
</ul>

<% [page-properties.h] | Page properties element %>
<@3> [page-properties.h] | page-properties </@3>

<#>
  <`><*p> [see also] [| misc] </*p></`>
</#>

<p>
  Only the first occurrence is replaced.
</p>
<p>
  Automatically generates the page properties paragraph,
  using the <`>{first created}</`> and <`>{last modified}</`> dates
  supplied to the <@> preamble | #preamble | [preamble.h] </@>.
</p>

<% [cite-this-page.h] | Cite this page element %>
<@3> [cite-this-page.h] | cite-this-page </@3>

<#>
  <`>
    <*c> \
      {text heading} | {tex key} | {tex heading} [| inconvenience message] \
    </*c>
  </`>
</#>

<p>
  Only the first occurrence is replaced.
</p>
<p>
  Automatically generates the Cite this page section,
  with automatic escaping of <`>~</`>, <`>{</`> and <`>}</`> for
  <`>{tex heading}</`>.
</p>

<ul>
  
  <li>
    <b>CCH</b>
    <``>
      <*c>
        Python: a regex converter from CCH to HTML
        | cch
        | {Python}: a regex converter from {CCH} to {HTML}
      </*c>
    </``>
  </li>
  
  <li>
    <b>Rendered</b>
      <*c>
        Python: a regex converter from CCH to HTML
        | cch
        | {Python}: a regex converter from {CCH} to {HTML}
      </*c>
  </li>
  
</ul>

<% [footer.h] | Footer element %>
<@3> [footer.h] | footer </@3>

<#>
  <`><*f> [copyright exception] [| ending remark] </*f></`>
</#>

<p>
  Only the first occurrence is replaced.
</p>
<p>
  Converted to a <`><footer></`> element,
  with the copyright year range automatically determined from
  <`>{first created}</`> and <`>{last modified}</`>
  supplied to the <@> preamble | #preamble | [preamble.h] </@>.
</p>


<% [single-argument.h] | Single-argument elements %>
<@2> [single-argument.h] | single-argument </@2>


<% [assisting-numeral.h] | Assisting numeral element %>
<@3> [assisting-numeral.h] | assisting-numeral </@3>

<#>
  <`>{horizontal whitespace} <_>{content}</_></`>
</#>

<p>
  Converted to a <`><span></`> element,
  with simple markup for <`>{content}</`> after the manner of the
  <@> text numeral element | #text-numeral | [text-numeral.h] </@>.
  The preceding horizontal whitespace is stripped.
</p>

<ul>
  
  <li>
    <b>CCH</b>
    <``>
      Tiny <_>3 * 10^-12</_>.
    </``>
  </li>
  
  <li>
    <b>HTML</b>
    <``>
      Tiny<span class="numeral">&nbsp;(3 × 10<sup>−12</sup>)</span>.
    </``>
  </li>
  
  <li>
    <b>Rendered</b> <br>
      Tiny <_>3 * 10^-12</_>.
  </li>
  
</ul>


<% [formatted-span.h] | Formatted span element %>
<@3> [formatted-span.h] | formatted-span </@3>

<#>
  <`><:{type}>{content}</:{type}></`>
</#>

<p>
  Converted to <`><span></`> elements with various types of formatting.
</p>

<!c><table>
  <tr>
    <th><`>{type}</`></th>
    <th>CCH</th>
    <th>Rendered</th>
  </tr>
  <tr>
    <td><`>r</`></td>
    <td><`><:r>red</:r></`></td>
    <td><:r>red</:r></td>
  </tr>
  <tr>
    <td><`>g</`></td>
    <td><`><:g>green</:g></`></td>
    <td><:g>green</:g></td>
  </tr>
  <tr>
    <td><`>b</`></td>
    <td><`><:b>blue</:b></`></td>
    <td><:b>blue</:b></td>
  </tr>
  <tr>
    <td><`>v</`></td>
    <td><`><:v>violet</:v></`></td>
    <td><:v>violet</:v></td>
  </tr>
  <tr>
    <td><`>y</`></td>
    <td><`><:y>light-yellow</:y></`></td>
    <td><:y>light-yellow</:y></td>
  </tr>
  <tr>
    <td><`>h</`></td>
    <td><`><:h>highlighted part</:h></`></td>
    <td><:h>highlighted part</:h></td>
  </tr>
  <tr>
    <td><`>t</`></td>
    <td><`><:t>thought</:t></`></td>
    <td><:t>thought</:t></td>
  </tr>
</table></!c>

<% [boxed-division.h] | Boxed division element %>
<@3> [boxed-division.h] | boxed-division </@3>

<#>
  <`><#[type]>{content}</#[type]></`>
</#>

<p>
  Converted to boxed <`><div></`> element, with centred or not-large text
  if <`>[type]</`> is supplied as <`>c</`> or <`>n</`>.
</p>

<p>
  For example, the boxed division above is generated using
</p>
<``>
  <#>
    <`><#[type]>{content}</#[type]></`>
  </#>
</``>

<% [dialogue-division.h] | Dialogue division element %>
<@3> [dialogue-division.h] | dialogue-division </@3>

<#>
  <`><~~>{content}</~~></`>
</#>

<p>
  Converted to a <`><div></`> element, for holding a dialogue
  between a host and a guest, which comprises of
  <@> dialogue images | #dialogue-image | [dialogue-image.h] </@> and
  <@>
    dialogue paragraphs
    | #dialogue-paragraph
    | [dialogue-paragraph.h]
  </@>.
</p>

<ul>
  
  <li>
    <b>CCH</b>
    <``>
      <~~>
        
        <+h> /res/dialogue-host.png | Host </+h>
        <~h>
          I am the host; my words and thoughts are in blue.
        </~h>
        <~ht>
          \{Thoughts are in <@> Comic Neue | http://comicneue.com/ </@>,
          against a light-pink background.\}
        </~ht>
        
        <+g> /res/dialogue-guest.png | Guest </+g>
        <~g>
          I am the guest; my words are thoughts are in black.
        </~g>
        <~gt>
          \{My thoughts are against a light-pink background also,
          and our images are automatically framed in our respectively colours.
          Also words and thoughts can span multiple paragraphs each,
          and will wrap around the image
          of the corresponding speaker or thinker.\}
        </~gt>
        <~gt>
          \{The dialogue is automatically concluded with "END"
          in a <`><div></`> element.\}
        </~gt>
        
      </~~>
    </``>
  </li>
  
  <li>
    <b>Rendered</b>
      <~~>
        
        <+h> /res/dialogue-host.png | Host </+h>
        <~h>
          I am the host; my words and thoughts are in blue.
        </~h>
        <~ht>
          \{Thoughts are in <@> Comic Neue | http://comicneue.com/ </@>,
          against a light-pink background.\}
        </~ht>
        
        <+g> /res/dialogue-guest.png | Guest </+g>
        <~g>
          I am the guest; my words are thoughts are in black.
        </~g>
        <~gt>
          \{My thoughts are against a light-pink background also,
          and our images are automatically framed in our respectively colours.
          Also words and thoughts can span multiple paragraphs each,
          and will wrap around the image
          of the corresponding speaker or thinker.\}
        </~gt>
        <~gt>
          \{The dialogue is automatically concluded with "END"
          in a <`><div></`> element.\}
        </~gt>
        
      </~~>
  </li>
  
</ul>

<% [dialogue-paragraph.h] | Dialogue paragraph element %>
<@3> [dialogue-paragraph.h] | dialogue-paragraph </@3>

<#>
  <`><~{pos}[type]>{content}</~{pos}[type]></`>
</#>

<p>
  Converted to a <`><p></`> element for the host's (<`>{pos}</`>~<`>h</`>)
  or the guest's (<`>{pos}</`>~<`>g</`>) words in a dialogue,
  or thoughts if <`>[type]</`> is supplied as <`>t</`>, \
  and to be used inside a
  <@>
    dialogue division element
    | #dialogue-division
    | [dialogue-division.h]
  </@>.
</p>

<% [link-division.h] | Link division element %>
<@3> [link-division.h] | link-division </@3>

<#>
  <`><@@>{content}</@@></`>
</#>

<p>
  Converted to a <`><div class="links"></`> element, for holding
  <@> anchor elements | #anchor | [anchor.h] </@>.
</p>

<% [header-navigation-bar.h] | Header navigation bar element %>
<@3> [header-navigation-bar.h] | header-navigation-bar </@3>

<#>
  <`><=h>{content}</=h></`>
</#>

<p>
  Converted to the equivalent
  <@> navigation bar element | #navigation-bar | [navigation-bar.h] </@>
  wrapped inside a <`><header></`> element,
  and usually to be filled with
  <@> item anchors | #item-anchor | [item-anchor.h] </@>.
</p>

<% [navigation-bar.h] | Navigation bar element %>
<@3> [navigation-bar.h] | navigation-bar </@3>

<#>
  <`><=>{content}</=></`>
</#>

<p>
  Converted to a <`><nav></`> element containing a <`><ul></`> element,
  and usually to be filled with
  <@> item anchors | #item-anchor | [item-anchor.h] </@>.
</p>

<% [note-paragraph.h] | Note paragraph element %>
<@3> [note-paragraph.h] | note-paragraph </@3>

<#>
  <`><.>{content}</.></`>
</#>

<p>
  Converted to a <`><p class="note"></`> element.
</p>

<ul>
  
  <li>
    <b>CCH</b>
    <``>
      <.>
        <b>Note.</b> This is a note paragraph. The font is smaller.
      </.>
    </``>
  </li>
  
  <li>
    <b>Rendered</b>
      <.>
        <b>Note.</b> This is a note paragraph. The font is smaller.
      </.>
  </li>
  
</ul>

<% [overflowing-division.h] | Overflowing division element %>
<@3> [overflowing-division.h] | overflowing-division </@3>

<#>
  <`><![type]>{content}</![type]></`>
</#>

<p>
  Converted to a <`><div class="overflowing"></`> element,
  wrapped inside a <`><div class="centred-flex"></`> element
    for <`>[type]</`>~<`>c</`>,
  and with additional class <`>centred-text</`>
    and wrapped inside a <`><div class="centred-flex"></`> element
    for <`>[type]</`>~<`>cc</`>.
</p>

<% [svg-style-container.h] | SVG style container element %>
<@3> [svg-style-container.h] | svg-style-container </@3>

<#>
  <`><-->{content}</--></`>
</#>

<p>
  Converted to a <`><style></`> element wrapped inside
  a <`><svg class="embedded-styles"></`> element,
  with all the necessary escaping automatically performed
  for the <@> special Conway literals | #escapes | [escapes.h] </@>
  <`>~</`>, <`>{</`> and <`>}</`>.
</p>

<% [text-romanisation.h] | Text romanisation element %>
<@3> [text-romanisation.h] | text-romanisation </@3>

<#>
  <`><^e> {content} </^e></`>
</#>

<p>
  Unescapes <`>{content}</`>, i.e.~replaces entries in the CCH column
  with the corresponding entries in the Rendered column
  (these conversions are used for the arguments of
  <@>
    assisting romanisations elements
    | #assisting-romanisation
    | [assisting-romanisation.h]
  </@>):
</p>

<!c><table>
  
  <tr>
    <th>CCH</th>
    <th>Rendered</th>
    <th>Code point</th>
  </tr>
  
  <tr>
    <th colspan="3">Conway only</th>
  </tr>
  
  <tr>
    <td><`>oe</`></td>
    <td><^e>oe</^e></td>
    <td><`>U+0153</`></td>
  </tr>
  
  <tr>
    <th colspan="3">Wade--Giles only</th>
  </tr>
  
  <tr>
    <td><`>e^</`></td>
    <td><^e>e^</^e></td>
    <td><`>U+00EA</`></td>
  </tr>
  
  <tr>
    <td><`>uu</`></td>
    <td><^e>uu</^e></td>
    <td><`>U+016D</`></td>
  </tr>
  
  <tr>
    <th colspan="3">Pinyin tone 1 (陰平 dark level) only</th>
  </tr>
  
  <tr>
    <td><`>a=</`></td>
    <td><^e>a=</^e></td>
    <td><`>U+0101</`></td>
  </tr>
  
  <tr>
    <td><`>e=</`></td>
    <td><^e>e=</^e></td>
    <td><`>U+0113</`></td>
  </tr>
  
  <tr>
    <td><`>i=</`></td>
    <td><^e>i=</^e></td>
    <td><`>U+012B</`></td>
  </tr>
  
  <tr>
    <td><`>o=</`></td>
    <td><^e>o=</^e></td>
    <td><`>U+014D</`></td>
  </tr>
  
  <tr>
    <td><`>u=</`></td>
    <td><^e>u=</^e></td>
    <td><`>U+016B</`></td>
  </tr>
  
  <tr>
    <td><`>u"=</`></td>
    <td><^e>u"=</^e></td>
    <td><`>U+01D6</`></td>
  </tr>
  
  <tr>
    <th colspan="3">Pinyin tone 2 (陽平 light level) only</th>
  </tr>
  
  <tr>
    <td><`>a/</`></td>
    <td><^e>a/</^e></td>
    <td><`>U+00E1</`></td>
  </tr>
  
  <tr>
    <td><`>e/</`></td>
    <td><^e>e/</^e></td>
    <td><`>U+00E9</`></td>
  </tr>
  
  <tr>
    <td><`>i/</`></td>
    <td><^e>i/</^e></td>
    <td><`>U+00ED</`></td>
  </tr>
  
  <tr>
    <td><`>o/</`></td>
    <td><^e>o/</^e></td>
    <td><`>U+00F3</`></td>
  </tr>
  
  <tr>
    <td><`>u/</`></td>
    <td><^e>u/</^e></td>
    <td><`>U+00FA</`></td>
  </tr>
  
  <tr>
    <td><`>u"/</`></td>
    <td><^e>u"/</^e></td>
    <td><`>U+01D8</`></td>
  </tr>
  
  <tr>
    <th colspan="3">Pinyin tone 3 (上 rising) only</th>
  </tr>
  
  <tr>
    <td><`>av</`></td>
    <td><^e>av</^e></td>
    <td><`>U+01CE</`></td>
  </tr>
  
  <tr>
    <td><`>ev</`></td>
    <td><^e>ev</^e></td>
    <td><`>U+011B</`></td>
  </tr>
  
  <tr>
    <td><`>iv</`></td>
    <td><^e>iv</^e></td>
    <td><`>U+01D0</`></td>
  </tr>
  
  <tr>
    <td><`>ov</`></td>
    <td><^e>ov</^e></td>
    <td><`>U+01D2</`></td>
  </tr>
  
  <tr>
    <td><`>uv</`></td>
    <td><^e>uv</^e></td>
    <td><`>U+01D4</`></td>
  </tr>
  
  <tr>
    <td><`>u"v</`></td>
    <td><^e>u"v</^e></td>
    <td><`>U+01DA</`></td>
  </tr>
  
  <tr>
    <th colspan="3">Pinyin tone 4 (去 departing) only</th>
  </tr>
  
  <tr>
    <td><`>a\</`></td>
    <td><^e>a\</^e></td>
    <td><`>U+00E0</`></td>
  </tr>
  
  <tr>
    <td><`>e\</`></td>
    <td><^e>e\</^e></td>
    <td><`>U+00E8</`></td>
  </tr>
  
  <tr>
    <td><`>i\</`></td>
    <td><^e>i\</^e></td>
    <td><`>U+00EC</`></td>
  </tr>
  
  <tr>
    <td><`>o\</`></td>
    <td><^e>o\</^e></td>
    <td><`>U+00F2</`></td>
  </tr>
  
  <tr>
    <td><`>u\</`></td>
    <td><^e>u\</^e></td>
    <td><`>U+00F9</`></td>
  </tr>
  
  <tr>
    <td><`>u"\</`></td>
    <td><^e>u"\</^e></td>
    <td><`>U+01DC</`></td>
  </tr>
  
  <tr>
    <th colspan="3">Common</th>
  </tr>
  
  <tr>
    <td><`>u"</`></td>
    <td><^e>u"</^e></td>
    <td><`>U+00FC</`></td>
  </tr>
  
</table></!c>


<% [text-numeral.h] | Text numeral element %>
<@3> [text-numeral.h] | text-numeral </@3>

<#>
  <`><_e>{content}</_e></`>
</#>

<p>
  Simple markup for
    exponents (<`>^</`>),
    minus signs (<`>-</`>), and
    times symbols (<`>*</`>).
</p>

<ul>
  
  <li>
    <b>CCH</b>
    <``>
      <_e>3 * 10^-12</_e>
    </``>
  </li>
  
  <li>
    <b>HTML</b>
    <``>
      3 × 10<sup>−12</sup>
    </``>
  </li>
  
  <li>
    <b>Rendered</b> <br>
      <_e>3 * 10^-12</_e>
  </li>
  
</ul>


<% [escapes.h] | Escapes %>
<@2> [escapes.h] | escapes </@2>


<p>
  "Escaped form" refers to the CCH,
  while "unescaped form" refers to the HTML it gets converted into.
</p>

<!c><table>
  
  <tr>
    <th>CCH</th>
    <th>HTML</th>
    <th>Rendered</th>
    <th>Note</th>
  </tr>
  
  <tr>
    <th colspan="4">Functional Conway literals</th>
  </tr>
  
  <tr>
    <td><`>\\</`></td>
    <td><`>\</`></td>
    <td>\\</td>
    <td>Literal backslash</td>
  </tr>
  
  <tr>
    <td><`>\|</`></td>
    <td><`>|</`></td>
    <td>\|</td>
    <td>Literal pipe</td>
  </tr>
  
  <tr>
    <th colspan="4">Special Conway literals</th>
  </tr>
  
  <tr>
    <td><`>\~</`></td>
    <td><`>~</`></td>
    <td>\~</td>
    <td>Literal tilde</td>
  </tr>
  
  <tr>
    <td><`>\--</`></td>
    <td><`>--</`></td>
    <td>\--</td>
    <td>Literal hyphen run (2 or more)</td>
  </tr>
  
  <tr>
    <td><`>\{</`></td>
    <td><`>{</`></td>
    <td>\{</td>
    <td>
      Literal opening \
      <@> curly bracket | #conway-italics | [conway-italics.h] </@>
    </td>
  </tr>
  
  <tr>
    <td><`>\}</`></td>
    <td><`>}</`></td>
    <td>\}</td>
    <td>
      Literal closing \
      <@> curly bracket | #conway-italics | [conway-italics.h] </@>
    </td>
  </tr>
  
  <tr>
    <th colspan="4">Various symbols</th>
  </tr>
  
  <tr>
    <td><`>\!</`></td>
    <td><`></`></td>
    <td>\!</td>
    <td>Literal empty string</td>
  </tr>
  
  <tr>
    <td><`>~</`></td>
    <td><`>&nbsp;</`></td>
    <td>~</td>
    <td>Non-breaking space</td>
  </tr>
  
  <tr>
    <td><`>---</`></td>
    <td><`>—</`></td>
    <td>---</td>
    <td><`>— U+2014 EM DASH</`></td>
  </tr>
  
  <tr>
    <td><`>--</`></td>
    <td><`>–</`></td>
    <td>--</td>
    <td><`>– U+2013 EN DASH</`></td>
  </tr>
  
  <tr>
    <td><`>\.</`></td>
    <td><`>・</`></td>
    <td>\.</td>
    <td><`>U+30FB KATAKANA MIDDLE DOT</`></td>
  </tr>
  
  <tr>
    <td><`>\&</`></td>
    <td><`>&amp;</`></td>
    <td>\&</td>
    <td>Ampersand</td>
  </tr>
  
  <tr>
    <td><`>\<</`></td>
    <td><`>&lt;</`></td>
    <td>\<</td>
    <td>Less than</td>
  </tr>
  
  <tr>
    <td><`>\></`></td>
    <td><`>&gt;</`></td>
    <td>\></td>
    <td>Greater than</td>
  </tr>
  
  <tr>
    <td><`>\LORD</`></td>
    <td>(very long)</td>
    <td>\LORD</td>
    <td>"Lord" in small caps</td>
  </tr>
  
  <tr>
    <td><`>\P</`></td>
    <td><`>¶</`></td>
    <td>\P</td>
    <td><`>¶ U+00B6 PILCROW SIGN</`></td>
  </tr>
  
  <tr>
    <td><`>\_</`></td>
    <td><`>&numsp;</`></td>
    <td>\_</td>
    <td>Figure space</td>
  </tr>
  
  <tr>
    <td><`>\,</`></td>
    <td><`>&thinsp;</`></td>
    <td>\,</td>
    <td>Thin space</td>
  </tr>
  
  <tr>
    <td><`>\/</`></td>
    <td colspan="3">\/</td>
  </tr>
  
  <tr>
    <td><`>\=</`></td>
    <td colspan="3">\=</td>
  </tr>
  
  <tr>
    <td><`>\or</`></td>
    <td>(very long)</td>
    <td>\or</td>
    <td>Alternative type "or"</td>
  </tr>
  
  <tr>
    <td><`>\lit</`></td>
    <td>(very long)</td>
    <td>\lit</td>
    <td>Alternative type "lit."</td>
  </tr>
  
  <tr>
    <td><`>\sic</`></td>
    <td><`><i>sic</i></`></td>
    <td>\sic</td>
    <td>Italicised "sic"</td>
  </tr>
  
  <tr>
    <th colspan="4">Conway literal Chinese run</th>
  </tr>
  
  <tr>
    <td><`>\仁者，人也。</`></td>
    <td><`>仁者，人也。</`></td>
    <td>\仁者，人也。</td>
    <td>
      Prevent
      <@>
        language span
        | #automatic-chinese-span
        | [automatic-chinese-span.h]
      </@>
    </td>
  </tr>
  
</table></!c>

<p>
  A backslash before a run of Chinese characters
  prevents automatic surrounding by a <`><span lang="zh-Hant"></`> element.
  (Here \. <`>U+30FB KATAKANA MIDDLE DOT</`> \
  is considered a Chinese character.)
</p>


<% [conway-italics.h] | Conway italics %>
<@2> [conway-italics.h] | conway-italics </@2>


<p>
  Curly brackets are automatically converted to italics tags.
  For literal curly brackets use the
  <@> backslash escapes | #escapes | [escapes.h] </@> <`>\{</`> and <`>\}</`>.
</p>

<ul>
  
  <li>
    <b>CCH</b>
    <``>
      An {italicised} word, followed by
      {an italicised phrase containing a {nested-italic} part}.
    </``>
  </li>
  
  <li>
    <b>HTML</b>
    <``>
      An <i>italicised</i> word, followed by
      <i>an italicised phrase containing a <i>nested-italic</i> part</i>.
    </``>
  </li>
  
  <li>
    <b>Rendered</b> <br>
      An {italicised} word, followed by
      {an italicised phrase containing a {nested-italic} part}.
  </li>
  
</ul>


<% [whitespace.h] | Whitespace %>
<@2> Whitespace | whitespace </@2>

<ol>
  <li>
    <`><pre></`> elements are de-indented \& backslash-line-continued
    (but not affected by the other removals),
  </li>
  <li>
    Horizontal whitespace around <`><br></`> elements is removed,
  </li>
  <li>
    Leading whitespace is removed,
  </li>
  <li>
    Empty lines are removed,
  </li>
  <li>
    Trailing whitespace is removed,
  </li>
  <li>
    Backslashed newlines are removed
    (i.e.~backslash is the line continuation character),
  </li>
  <li>
    Newlines immediately preceding <`><br></`> elements are removed, and
  </li>
  <li>
    Whitespace for attributes is canonicalised with
    (1)~a single space before the attribute name, and
    (2)~no whitespace around the equals sign.
  </li>
</ol>

<ul>
  
  <li>
    <b>CCH</b>
    <``>
      <pre>
                A heavily indented line.
                    A more heavily indented line.
      </pre>
      <p>
        A line with leading whitespace. <br>
            A line followed by a blank line. <br>
            
        A line ending in a backslash\
            (stuff originally on the next line).
      </p>
    </``>
  </li>
  
  <li>
    <b>HTML</b>
    <``>
      <pre>
      A heavily indented line.
          A more heavily indented line.
      </pre>
      <p>
      A line with leading whitespace.<br>
      A line followed by a blank line.<br>
      A line ending in a backslash(stuff originally on the next line).
      </p>
    </``>
  </li>
  
  <li>
    <b>Rendered</b>
      <pre>
                A heavily indented line.
                    A more heavily indented line.
      </pre>
      <p>
        A line with leading whitespace. <br>
            A line followed by a blank line. <br>
            
        A line ending in a backslash\
            (stuff originally on the next line).
      </p>
  </li>
  
</ul>


<% [automatic-chinese-span.h] | Automatic Chinese language spans %>
<@2> [automatic-chinese-span.h] | automatic-chinese-span </@2>

<p>
  Runs of Chinese characters
  (including \. <`>U+30FB KATAKANA MIDDLE DOT</`>),
  and consecutive runs of
  <@>
    formatted spans
    | #formatted-span
    | [formatted-span.h]
  </@>
  containing these,
  are automatically wrapped in a <`><span lang="zh-Hant"></`> element.
  <@> Precede runs by a backslash | #escapes | [escapes.h] </@> \
  to prevent this.
  Literal empty strings <`>\!</`> may be used to split runs.
</p>

<ul>
  
  <li>
    <b>CCH</b>
    <``>
      《禮記\.禮運》大道之行也，天下為公。 <br>
      \《禮記\.禮運》大道之行也，天下為公。 <br>
      黑、<:r>赤</:r>、<:g>翠</:g>、<:b>青</:b>、<:v>紫</:v>、<:y>黃</:y>、\
        <:h>顯</:h>、<:t>思</:t>。 <br>
      前\!後
    </``>
  </li>
  
  <li>
    <b>HTML</b>
    <pre>
      \<span lang="zh-Hant"\>\
        《禮記・禮運》大道之行也，天下為公。\
      \</span\>\<br\>
      《禮記・禮運》大道之行也，天下為公。\
        \<br\>
      \<span lang="zh-Hant"\>黑、\
        \<span class="red"\>赤\</span\>、\
        \<span class="green"\>翠\</span\>、\
        \<span class="blue"\>青\</span\>、\
        \<span class="violet"\>紫\</span\>、\
        \<span class="lightyellow"\>黃\</span\>、\
        \<span class="highlighted-part"\>顯\</span\>、\
        \<span class="thought"\>思\</span\>。\</span\>\
        \<br\>
      \<span lang="zh-Hant"\>前\</span\>\<span lang="zh-Hant"\>後\</span\>
    </pre>
  </li>
  
  <li>
    <b>Rendered</b> <br>
      《禮記\.禮運》大道之行也，天下為公。 <br>
      \《禮記\.禮運》大道之行也，天下為公。 <br>
      黑、<:r>赤</:r>、<:g>翠</:g>、<:b>青</:b>、<:v>紫</:v>、<:y>黃</:y>、\
        <:h>顯</:h>、<:t>思</:t>。 <br>
      前\!後
  </li>
  
</ul>

<*f></*f>
